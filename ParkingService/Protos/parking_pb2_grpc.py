# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import Protos.parking_pb2 as parking_pb2


class userApiStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.park = channel.unary_unary(
        '/userApi/park',
        request_serializer=parking_pb2.userDetailsPark.SerializeToString,
        response_deserializer=parking_pb2.location.FromString,
        )
    self.unPark = channel.unary_unary(
        '/userApi/unPark',
        request_serializer=parking_pb2.userDetailsUnPark.SerializeToString,
        response_deserializer=parking_pb2.response.FromString,
        )


class userApiServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def park(self, request, context):
    """for parking
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def unPark(self, request, context):
    """for unParking
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_userApiServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'park': grpc.unary_unary_rpc_method_handler(
          servicer.park,
          request_deserializer=parking_pb2.userDetailsPark.FromString,
          response_serializer=parking_pb2.location.SerializeToString,
      ),
      'unPark': grpc.unary_unary_rpc_method_handler(
          servicer.unPark,
          request_deserializer=parking_pb2.userDetailsUnPark.FromString,
          response_serializer=parking_pb2.response.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'userApi', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
